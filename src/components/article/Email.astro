---
interface EmailMessage {
  email: string;
  message: string;
  time?: string;
}
interface Props {
  conversation: EmailMessage[];
}

const { conversation } = Astro.props;
---

<div class="email">
  {
    conversation.map((message) => (
      <div class="message">
        <div class="message-header">
          <div class="sender-icon">
            <span>{message.email.slice(0, 2).toUpperCase()}</span>
          </div>
          <div class="emails-list">
            <span>{message.email}</span>
            <span>To You</span>
          </div>
        </div>
        {message.message}
      </div>
    ))
  }
</div>

<style>
  .email {
    background: black;
    border-radius: 0.5rem;
    display: grid;
    gap: 0.5rem;
    overflow: hidden;
  }
  .message {
    background: #333;
    padding: 1rem;
  }
  .message-header {
    display: flex;
    gap: 1rem;
    align-items: center;
    margin-bottom: 1rem;
    font-size: 1rem;
  }
  .sender-icon {
    background: salmon;
    border-radius: 50%;
    height: 3rem;
    width: 3rem;
    display: flex;
    align-items: center;
    justify-content: center;
    font-family: arial;
  }
  .emails-list {
    display: grid;
    opacity: 0.5;
  }
</style>
